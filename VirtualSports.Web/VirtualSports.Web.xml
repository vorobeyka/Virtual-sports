<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VirtualSports.Web</name>
    </assembly>
    <members>
        <member name="T:VirtualSports.Web.Authentication.AuthenticationHandler">
            <inheritdoc />
        </member>
        <member name="M:VirtualSports.Web.Authentication.AuthenticationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock,VirtualSports.Web.Services.ISessionStorage)">
            <inheritdoc />
        </member>
        <member name="M:VirtualSports.Web.Authentication.AuthenticationHandler.HandleAuthenticateAsync">
            <inheritdoc />
        </member>
        <member name="T:VirtualSports.Web.Contexts.DatabaseManagerContext">
            <inheritdoc />
        </member>
        <member name="M:VirtualSports.Web.Contexts.DatabaseManagerContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{VirtualSports.Web.Contexts.DatabaseManagerContext})">
            <inheritdoc />
        </member>
        <member name="M:VirtualSports.Web.Contexts.DatabaseManagerContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <inheritdoc />
        </member>
        <member name="M:VirtualSports.Web.Contexts.DatabaseManagerContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:VirtualSports.Web.Controllers.AdminController">
            <summary>
            Controller for postman
            </summary>
        </member>
        <member name="T:VirtualSports.Web.Controllers.AuthController">
            <summary>
            Controller for authorization.
            </summary>
        </member>
        <member name="M:VirtualSports.Web.Controllers.AuthController.#ctor(VirtualSports.Web.Services.DatabaseServices.IDatabaseAuthService,VirtualSports.Web.Services.ISessionStorage)">
            <summary>
            Constructor with DI.
            </summary>
        </member>
        <member name="M:VirtualSports.Web.Controllers.AuthController.RegisterAsync(VirtualSports.Web.Models.Account,System.Threading.CancellationToken)">
            <summary>
            Registration.
            </summary>
            <returns>Action result</returns>
            <response code="200">Returns token.</response>
            <response code="400">Invalid model state.</response>
            <response code="409">When login is used.</response>
        </member>
        <member name="M:VirtualSports.Web.Controllers.AuthController.LoginAsync(VirtualSports.Web.Models.Account,System.Threading.CancellationToken)">
            <summary>
            LogIn.
            </summary>
            <returns>Action result.</returns>
            <response code="200">Returns token.</response>
            <response code="400">Invalid model state.</response>
            <response code="404">When username or password is wrong.</response>
        </member>
        <member name="M:VirtualSports.Web.Controllers.AuthController.LogoutAsync(System.Threading.CancellationToken)">
            <summary>
            LogOut.
            </summary>
            <returns>Action result.</returns>
        </member>
        <member name="T:VirtualSports.Web.Controllers.GamesController">
            <summary>
            Controller for games requests
            </summary>
        </member>
        <member name="P:VirtualSports.Web.Controllers.GamesController.Platform">
            <summary>
            Web or Mobile
            </summary>
        </member>
        <member name="M:VirtualSports.Web.Controllers.GamesController.GetAllData(System.Threading.CancellationToken)">
            <summary>
            Initial request for main page
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualSports.Web.Controllers.GamesController.PlayGame(System.Threading.CancellationToken,System.String,VirtualSports.Web.Services.DatabaseServices.IDatabaseUserService)">
            <summary>
            Play chosen game
            </summary>
            <param name="cancellationToken"></param>
            <param name="gameId"></param>
            <param name="dbUserService"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualSports.Web.Controllers.GamesController.PlayDice(System.Threading.CancellationToken,VirtualSports.Web.Contracts.DiceBetValidationModel,VirtualSports.Web.Services.DatabaseServices.IDatabaseUserService,VirtualSports.Web.Services.IDiceService)">
            <summary>
            Throw dice
            </summary>
            <param name="cancellationToken"></param>
            <param name="dateTime"></param>
            <param name="betType"></param>
            <param name="dbUserService"></param>
            <param name="diceService"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualSports.Web.Controllers.UserController">
            <summary>
            User Controller
            </summary>
        </member>
        <member name="P:VirtualSports.Web.Controllers.UserController.Platform">
            <summary>
            Web or Mobile
            </summary>
        </member>
        <member name="M:VirtualSports.Web.Controllers.UserController.GetFavourites(System.Threading.CancellationToken)">
            <summary>
            Get user's favourites games
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualSports.Web.Controllers.UserController.GetRecent(System.Threading.CancellationToken)">
            <summary>
            Get user's recent games
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualSports.Web.Controllers.UserController.AddToFavourites(System.String,System.Threading.CancellationToken)">
            <summary>
            Add favourite game
            </summary>
            <param name="cancellationToken"></param>
            <param name="gameId"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualSports.Web.Controllers.UserController.GetBetHistory(System.Threading.CancellationToken)">
            <summary>
            Get user's bet history
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualSports.Web.Models.Account">
            <summary>
            User model.
            </summary>
        </member>
        <member name="P:VirtualSports.Web.Models.Account.Login">
            <summary>
            User's login.
            </summary>
        </member>
        <member name="P:VirtualSports.Web.Models.Account.Password">
            <summary>
            User's password.
            </summary>
        </member>
        <member name="M:VirtualSports.Web.Models.Account.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="login"></param>
            <param name="password"></param>
        </member>
        <member name="T:VirtualSports.Web.Models.DatabaseModels.ExpSession">
            <summary>
            Model for table expired sessions.
            </summary>
        </member>
        <member name="P:VirtualSports.Web.Models.DatabaseModels.ExpSession.Id">
            <summary>
            Unique id.
            </summary>
        </member>
        <member name="P:VirtualSports.Web.Models.DatabaseModels.ExpSession.Token">
            <summary>
            Jwt token.
            </summary>
        </member>
        <member name="T:VirtualSports.Web.Options.JwtOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:VirtualSports.Web.Options.JwtOptions.Issuer">
            <summary>
            Token issuer (producer).
            </summary>
        </member>
        <member name="F:VirtualSports.Web.Options.JwtOptions.Audience">
            <summary>
            Token audience (consumer).
            </summary>
        </member>
        <member name="F:VirtualSports.Web.Options.JwtOptions.PrivateKey">
            <summary>
            Token secret part.
            </summary>
        </member>
        <member name="F:VirtualSports.Web.Options.JwtOptions.LifeTime">
            <summary>
            Token's life time.
            </summary>
        </member>
        <member name="F:VirtualSports.Web.Options.JwtOptions.RequireHttps">
            <summary>
            Require HTTPS.
            </summary>
        </member>
        <member name="M:VirtualSports.Web.Options.JwtOptions.GetSymmetricSecurityKey">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:VirtualSports.Web.Services.DatabaseServices.DatabaseAuthService">
            <inheritdoc />
        </member>
        <member name="M:VirtualSports.Web.Services.DatabaseServices.DatabaseAuthService.LoginUserAsync(VirtualSports.Web.Models.Account,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:VirtualSports.Web.Services.DatabaseServices.DatabaseAuthService.RegisterUserAsync(VirtualSports.Web.Models.Account,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:VirtualSports.Web.Services.DatabaseServices.DatabaseAuthService.ExpireToken(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:VirtualSports.Web.Services.DatabaseServices.IDatabaseAuthService">
            <summary>
            Database authorization service.
            </summary>
        </member>
        <member name="M:VirtualSports.Web.Services.DatabaseServices.IDatabaseAuthService.RegisterUserAsync(VirtualSports.Web.Models.Account,System.Threading.CancellationToken)">
            <summary>
            Register user.
            </summary>
            <param name="account"></param>
            <param name="cancellationToken"></param>
            <returns>Jwt token.</returns>
        </member>
        <member name="M:VirtualSports.Web.Services.DatabaseServices.IDatabaseAuthService.LoginUserAsync(VirtualSports.Web.Models.Account,System.Threading.CancellationToken)">
            <summary>
            Login user.
            </summary>
            <param name="account"></param>
            <param name="cancellationToken"></param>
            <returns>Jwt token.</returns>
        </member>
        <member name="M:VirtualSports.Web.Services.DatabaseServices.IDatabaseAuthService.ExpireToken(System.String,System.Threading.CancellationToken)">
            <summary>
            Expire token.
            </summary>
            <param name="token"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualSports.Web.Services.ISessionStorage">
            <summary>
            
            </summary>
        </member>
        <member name="T:VirtualSports.Web.Services.SessionStorageInMemory">
            <inheritdoc />
        </member>
        <member name="M:VirtualSports.Web.Services.SessionStorageInMemory.#ctor(VirtualSports.Web.Contexts.DatabaseManagerContext)">
            <summary>
            
            </summary>
            <param name="dbContext"></param>
        </member>
        <member name="M:VirtualSports.Web.Services.SessionStorageInMemory.Add(System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualSports.Web.Services.SessionStorageInMemory.Contains(System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
    </members>
</doc>
